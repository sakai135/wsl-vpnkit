#! /bin/sh

SOCKET_PATH=/var/run/wsl-vpnkit.sock
PIPE_PATH="//./pipe/wsl-vpnkit"

POWERSHELL_PATH="/mnt/c/WINDOWS/System32/WindowsPowerShell/v1.0/powershell.exe"

VPNKIT_PATH=${VPNKIT_PATH:-C:/Program Files/Docker/Docker/resources/vpnkit.exe}
# VPNKIT_HTTP_CONFIG="\$env:APPDATA/Docker/http_proxy.json"
# VPNKIT_GATEWAY_FORWARD_CONFIG="\$env:APPDATA/Docker/gateway_forwards.json"
VPNKIT_GATEWAY_IP="192.168.67.1"
VPNKIT_HOST_IP="192.168.67.2"
VPNKIT_LOWEST_IP="192.168.67.3"
VPNKIT_HIGHEST_IP="192.168.67.14"

TAP_NAME=eth1

PID_VPNKIT=
IP_ROUTE=
RESOLV_CONF=

relay () {
    socat UNIX-LISTEN:$SOCKET_PATH,fork,umask=007 EXEC:"npiperelay.exe -ep -s $PIPE_PATH",nofork
}

vpnkit () {
    PSCMD="& \"$VPNKIT_PATH\" \
        --ethernet \"$PIPE_PATH\".Replace('/','\\') \
        --listen-backlog 32 \
        --gateway-ip $VPNKIT_GATEWAY_IP \
        --host-ip $VPNKIT_HOST_IP \
        --lowest-ip $VPNKIT_LOWEST_IP \
        --highest-ip $VPNKIT_HIGHEST_IP \
    "
    if [ "$VPNKIT_HTTP_CONFIG" ]; then
        PSCMD="$PSCMD --http \"$VPNKIT_HTTP_CONFIG\""
    fi
    if [ "$VPNKIT_GATEWAY_FORWARD_CONFIG" ]; then
        PSCMD="$PSCMD --gateway-forwards \"$VPNKIT_GATEWAY_FORWARD_CONFIG\""
    fi
    "$POWERSHELL_PATH" -Command "$PSCMD"
}

vpnkit_pid () {
    "$POWERSHELL_PATH" -Command "( \
        Get-Process | \
        Where-Object { \$_.Path -eq \"$VPNKIT_PATH\".Replace('/','\\') } | \
        Sort-Object -Property StartTime -Descending | \
        Select-Object -First 1 \
    ).Id"
}

tap () {
    vpnkit-tap-vsockd --tap $TAP_NAME --path $SOCKET_PATH
}

ipconfig () {
    ip a add $VPNKIT_LOWEST_IP/255.255.255.0 dev $TAP_NAME
    ip link set dev $TAP_NAME up
    IP_ROUTE=$(ip route | grep default)
    ip route del $IP_ROUTE
    ip route add default via $VPNKIT_GATEWAY_IP dev $TAP_NAME
    RESOLV_CONF=$(cat /etc/resolv.conf)
    echo "nameserver $VPNKIT_GATEWAY_IP" > /etc/resolv.conf

}

close () {
    "$POWERSHELL_PATH" -Command "Stop-Process -Id $PID_VPNKIT"
    ip link set dev $TAP_NAME down
    ip route add $IP_ROUTE
    echo "$RESOLV_CONF" > /etc/resolv.conf
    kill 0
}

if [ ${EUID:-$(id -u)} -ne 0 ]; then
    echo "Please run this script as root"
    exit 1
fi

relay &
sleep 3
vpnkit &
PID_VPNKIT=$(vpnkit_pid)
sleep 3
tap &
sleep 3
ipconfig
trap close exit
trap exit int term
wait
