name: Build

on:
  push:

env:
  TAG_NAME: ${{ format('wslvpnkit:{0}-{1}', github.sha, github.run_number) }}
  RUN_URL: ${{ format('{0}/{1}/actions/runs/{2}/attempts/{3}', github.server_url, github.repository, github.run_id, github.run_attempt) }}

jobs:

  build:
    runs-on: ubuntu-20.04
    permissions:
      checks: write
    steps:
    - uses: actions/checkout@v2
    - name: Build
      run: |
        docker build -t $TAG_NAME -f ./distro/Dockerfile --build-arg REF=$RUN_URL --build-arg VERSION=${GITHUB_REF#refs/tags/} .
    - uses: azure/container-scan@v0
      with:
        image-name: ${{ env.TAG_NAME }}
    - name: Package
      run: |
        CONTAINER_ID=$(docker create $TAG_NAME)
        docker cp $CONTAINER_ID:/files/wsl-gvproxy.exe ./
        docker cp $CONTAINER_ID:/files/wsl-vm ./
        docker export $CONTAINER_ID | gzip > wsl-vpnkit.tar.gz
        sha256sum wsl-vpnkit.tar.gz | tee wsl-vpnkit.tar.gz.sha256
        sha256sum wsl-gvproxy.exe | tee wsl-gvproxy.exe.sha256
        sha256sum wsl-vm | tee wsl-vm.sha256
        ls -la wsl-vpnkit.tar.gz wsl-gvproxy.exe wsl-vm
    - name: Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: wsl-vpnkit
        path: |
          wsl-vpnkit.tar.gz
          wsl-vpnkit.tar.gz.sha256
          wsl-gvproxy.exe
          wsl-gvproxy.exe.sha256
          wsl-vm
          wsl-vm.sha256
